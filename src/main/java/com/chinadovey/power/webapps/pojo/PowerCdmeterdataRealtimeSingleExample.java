package com.chinadovey.power.webapps.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PowerCdmeterdataRealtimeSingleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public PowerCdmeterdataRealtimeSingleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andEcuIdIsNull() {
            addCriterion("ecu_id is null");
            return (Criteria) this;
        }

        public Criteria andEcuIdIsNotNull() {
            addCriterion("ecu_id is not null");
            return (Criteria) this;
        }

        public Criteria andEcuIdEqualTo(Integer value) {
            addCriterion("ecu_id =", value, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEcuIdNotEqualTo(Integer value) {
            addCriterion("ecu_id <>", value, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEcuIdGreaterThan(Integer value) {
            addCriterion("ecu_id >", value, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEcuIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ecu_id >=", value, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEcuIdLessThan(Integer value) {
            addCriterion("ecu_id <", value, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEcuIdLessThanOrEqualTo(Integer value) {
            addCriterion("ecu_id <=", value, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEcuIdIn(List<Integer> values) {
            addCriterion("ecu_id in", values, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEcuIdNotIn(List<Integer> values) {
            addCriterion("ecu_id not in", values, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEcuIdBetween(Integer value1, Integer value2) {
            addCriterion("ecu_id between", value1, value2, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEcuIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ecu_id not between", value1, value2, "ecuId");
            return (Criteria) this;
        }

        public Criteria andEquiIdIsNull() {
            addCriterion("equi_id is null");
            return (Criteria) this;
        }

        public Criteria andEquiIdIsNotNull() {
            addCriterion("equi_id is not null");
            return (Criteria) this;
        }

        public Criteria andEquiIdEqualTo(Long value) {
            addCriterion("equi_id =", value, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiIdNotEqualTo(Long value) {
            addCriterion("equi_id <>", value, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiIdGreaterThan(Long value) {
            addCriterion("equi_id >", value, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiIdGreaterThanOrEqualTo(Long value) {
            addCriterion("equi_id >=", value, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiIdLessThan(Long value) {
            addCriterion("equi_id <", value, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiIdLessThanOrEqualTo(Long value) {
            addCriterion("equi_id <=", value, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiIdIn(List<Long> values) {
            addCriterion("equi_id in", values, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiIdNotIn(List<Long> values) {
            addCriterion("equi_id not in", values, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiIdBetween(Long value1, Long value2) {
            addCriterion("equi_id between", value1, value2, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiIdNotBetween(Long value1, Long value2) {
            addCriterion("equi_id not between", value1, value2, "equiId");
            return (Criteria) this;
        }

        public Criteria andEquiStatusIsNull() {
            addCriterion("equi_status is null");
            return (Criteria) this;
        }

        public Criteria andEquiStatusIsNotNull() {
            addCriterion("equi_status is not null");
            return (Criteria) this;
        }

        public Criteria andEquiStatusEqualTo(Integer value) {
            addCriterion("equi_status =", value, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiStatusNotEqualTo(Integer value) {
            addCriterion("equi_status <>", value, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiStatusGreaterThan(Integer value) {
            addCriterion("equi_status >", value, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("equi_status >=", value, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiStatusLessThan(Integer value) {
            addCriterion("equi_status <", value, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiStatusLessThanOrEqualTo(Integer value) {
            addCriterion("equi_status <=", value, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiStatusIn(List<Integer> values) {
            addCriterion("equi_status in", values, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiStatusNotIn(List<Integer> values) {
            addCriterion("equi_status not in", values, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiStatusBetween(Integer value1, Integer value2) {
            addCriterion("equi_status between", value1, value2, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("equi_status not between", value1, value2, "equiStatus");
            return (Criteria) this;
        }

        public Criteria andEquiFrIsNull() {
            addCriterion("equi_fr is null");
            return (Criteria) this;
        }

        public Criteria andEquiFrIsNotNull() {
            addCriterion("equi_fr is not null");
            return (Criteria) this;
        }

        public Criteria andEquiFrEqualTo(Double value) {
            addCriterion("equi_fr =", value, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiFrNotEqualTo(Double value) {
            addCriterion("equi_fr <>", value, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiFrGreaterThan(Double value) {
            addCriterion("equi_fr >", value, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiFrGreaterThanOrEqualTo(Double value) {
            addCriterion("equi_fr >=", value, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiFrLessThan(Double value) {
            addCriterion("equi_fr <", value, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiFrLessThanOrEqualTo(Double value) {
            addCriterion("equi_fr <=", value, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiFrIn(List<Double> values) {
            addCriterion("equi_fr in", values, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiFrNotIn(List<Double> values) {
            addCriterion("equi_fr not in", values, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiFrBetween(Double value1, Double value2) {
            addCriterion("equi_fr between", value1, value2, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiFrNotBetween(Double value1, Double value2) {
            addCriterion("equi_fr not between", value1, value2, "equiFr");
            return (Criteria) this;
        }

        public Criteria andEquiPsIsNull() {
            addCriterion("equi_ps is null");
            return (Criteria) this;
        }

        public Criteria andEquiPsIsNotNull() {
            addCriterion("equi_ps is not null");
            return (Criteria) this;
        }

        public Criteria andEquiPsEqualTo(Double value) {
            addCriterion("equi_ps =", value, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiPsNotEqualTo(Double value) {
            addCriterion("equi_ps <>", value, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiPsGreaterThan(Double value) {
            addCriterion("equi_ps >", value, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiPsGreaterThanOrEqualTo(Double value) {
            addCriterion("equi_ps >=", value, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiPsLessThan(Double value) {
            addCriterion("equi_ps <", value, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiPsLessThanOrEqualTo(Double value) {
            addCriterion("equi_ps <=", value, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiPsIn(List<Double> values) {
            addCriterion("equi_ps in", values, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiPsNotIn(List<Double> values) {
            addCriterion("equi_ps not in", values, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiPsBetween(Double value1, Double value2) {
            addCriterion("equi_ps between", value1, value2, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiPsNotBetween(Double value1, Double value2) {
            addCriterion("equi_ps not between", value1, value2, "equiPs");
            return (Criteria) this;
        }

        public Criteria andEquiQsIsNull() {
            addCriterion("equi_qs is null");
            return (Criteria) this;
        }

        public Criteria andEquiQsIsNotNull() {
            addCriterion("equi_qs is not null");
            return (Criteria) this;
        }

        public Criteria andEquiQsEqualTo(Double value) {
            addCriterion("equi_qs =", value, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiQsNotEqualTo(Double value) {
            addCriterion("equi_qs <>", value, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiQsGreaterThan(Double value) {
            addCriterion("equi_qs >", value, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiQsGreaterThanOrEqualTo(Double value) {
            addCriterion("equi_qs >=", value, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiQsLessThan(Double value) {
            addCriterion("equi_qs <", value, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiQsLessThanOrEqualTo(Double value) {
            addCriterion("equi_qs <=", value, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiQsIn(List<Double> values) {
            addCriterion("equi_qs in", values, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiQsNotIn(List<Double> values) {
            addCriterion("equi_qs not in", values, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiQsBetween(Double value1, Double value2) {
            addCriterion("equi_qs between", value1, value2, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiQsNotBetween(Double value1, Double value2) {
            addCriterion("equi_qs not between", value1, value2, "equiQs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsIsNull() {
            addCriterion("equi_pfs is null");
            return (Criteria) this;
        }

        public Criteria andEquiPfsIsNotNull() {
            addCriterion("equi_pfs is not null");
            return (Criteria) this;
        }

        public Criteria andEquiPfsEqualTo(Double value) {
            addCriterion("equi_pfs =", value, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsNotEqualTo(Double value) {
            addCriterion("equi_pfs <>", value, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsGreaterThan(Double value) {
            addCriterion("equi_pfs >", value, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsGreaterThanOrEqualTo(Double value) {
            addCriterion("equi_pfs >=", value, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsLessThan(Double value) {
            addCriterion("equi_pfs <", value, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsLessThanOrEqualTo(Double value) {
            addCriterion("equi_pfs <=", value, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsIn(List<Double> values) {
            addCriterion("equi_pfs in", values, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsNotIn(List<Double> values) {
            addCriterion("equi_pfs not in", values, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsBetween(Double value1, Double value2) {
            addCriterion("equi_pfs between", value1, value2, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiPfsNotBetween(Double value1, Double value2) {
            addCriterion("equi_pfs not between", value1, value2, "equiPfs");
            return (Criteria) this;
        }

        public Criteria andEquiUIsNull() {
            addCriterion("equi_u is null");
            return (Criteria) this;
        }

        public Criteria andEquiUIsNotNull() {
            addCriterion("equi_u is not null");
            return (Criteria) this;
        }

        public Criteria andEquiUEqualTo(Double value) {
            addCriterion("equi_u =", value, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiUNotEqualTo(Double value) {
            addCriterion("equi_u <>", value, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiUGreaterThan(Double value) {
            addCriterion("equi_u >", value, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiUGreaterThanOrEqualTo(Double value) {
            addCriterion("equi_u >=", value, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiULessThan(Double value) {
            addCriterion("equi_u <", value, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiULessThanOrEqualTo(Double value) {
            addCriterion("equi_u <=", value, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiUIn(List<Double> values) {
            addCriterion("equi_u in", values, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiUNotIn(List<Double> values) {
            addCriterion("equi_u not in", values, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiUBetween(Double value1, Double value2) {
            addCriterion("equi_u between", value1, value2, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiUNotBetween(Double value1, Double value2) {
            addCriterion("equi_u not between", value1, value2, "equiU");
            return (Criteria) this;
        }

        public Criteria andEquiIIsNull() {
            addCriterion("equi_i is null");
            return (Criteria) this;
        }

        public Criteria andEquiIIsNotNull() {
            addCriterion("equi_i is not null");
            return (Criteria) this;
        }

        public Criteria andEquiIEqualTo(Double value) {
            addCriterion("equi_i =", value, "equiI");
            return (Criteria) this;
        }

        public Criteria andEquiINotEqualTo(Double value) {
            addCriterion("equi_i <>", value, "equiI");
            return (Criteria) this;
        }

        public Criteria andEquiIGreaterThan(Double value) {
            addCriterion("equi_i >", value, "equiI");
            return (Criteria) this;
        }

        public Criteria andEquiIGreaterThanOrEqualTo(Double value) {
            addCriterion("equi_i >=", value, "equiI");
            return (Criteria) this;
        }

        public Criteria andEquiILessThan(Double value) {
            addCriterion("equi_i <", value, "equiI");
            return (Criteria) this;
        }

        public Criteria andEquiILessThanOrEqualTo(Double value) {
            addCriterion("equi_i <=", value, "equiI");
            return (Criteria) this;
        }

        public Criteria andEquiIIn(List<Double> values) {
            addCriterion("equi_i in", values, "equiI");
            return (Criteria) this;
        }

        public Criteria andEquiINotIn(List<Double> values) {
            addCriterion("equi_i not in", values, "equiI");
            return (Criteria) this;
        }

        public Criteria andEquiIBetween(Double value1, Double value2) {
            addCriterion("equi_i between", value1, value2, "equiI");
            return (Criteria) this;
        }

        public Criteria andEquiINotBetween(Double value1, Double value2) {
            addCriterion("equi_i not between", value1, value2, "equiI");
            return (Criteria) this;
        }

        public Criteria andCollectTimeIsNull() {
            addCriterion("collect_time is null");
            return (Criteria) this;
        }

        public Criteria andCollectTimeIsNotNull() {
            addCriterion("collect_time is not null");
            return (Criteria) this;
        }

        public Criteria andCollectTimeEqualTo(Date value) {
            addCriterion("collect_time =", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeNotEqualTo(Date value) {
            addCriterion("collect_time <>", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeGreaterThan(Date value) {
            addCriterion("collect_time >", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("collect_time >=", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeLessThan(Date value) {
            addCriterion("collect_time <", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeLessThanOrEqualTo(Date value) {
            addCriterion("collect_time <=", value, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeIn(List<Date> values) {
            addCriterion("collect_time in", values, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeNotIn(List<Date> values) {
            addCriterion("collect_time not in", values, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeBetween(Date value1, Date value2) {
            addCriterion("collect_time between", value1, value2, "collectTime");
            return (Criteria) this;
        }

        public Criteria andCollectTimeNotBetween(Date value1, Date value2) {
            addCriterion("collect_time not between", value1, value2, "collectTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeIsNull() {
            addCriterion("save_time is null");
            return (Criteria) this;
        }

        public Criteria andSaveTimeIsNotNull() {
            addCriterion("save_time is not null");
            return (Criteria) this;
        }

        public Criteria andSaveTimeEqualTo(Date value) {
            addCriterion("save_time =", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeNotEqualTo(Date value) {
            addCriterion("save_time <>", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeGreaterThan(Date value) {
            addCriterion("save_time >", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("save_time >=", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeLessThan(Date value) {
            addCriterion("save_time <", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeLessThanOrEqualTo(Date value) {
            addCriterion("save_time <=", value, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeIn(List<Date> values) {
            addCriterion("save_time in", values, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeNotIn(List<Date> values) {
            addCriterion("save_time not in", values, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeBetween(Date value1, Date value2) {
            addCriterion("save_time between", value1, value2, "saveTime");
            return (Criteria) this;
        }

        public Criteria andSaveTimeNotBetween(Date value1, Date value2) {
            addCriterion("save_time not between", value1, value2, "saveTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated do_not_delete_during_merge Mon Oct 31 17:56:21 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table power_cdmeterdata_realtime_s
     *
     * @mbggenerated Mon Oct 31 17:56:21 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}