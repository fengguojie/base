package com.chinadovey.power.webapps.jellard;

/**
 * java 内存管理
 * Java虚拟机在执行Java程序的过程中会把它所管理的内存划分为若干个不同的数据区域。这些区域都有各自的用途，以及创建和销毁的时间，
 * 有的区域随着虚拟机进程的启动而存在，有些区域则是依赖用户线程的启动和结束而建立和销毁。根据《Java虚拟机规范（第2版）》的规定，
 * Java虚拟机所管理的内存将会包括以下几个运行时数据区域
 * 1:方法区（Method Area）
 * 2:虚拟机栈（VM Stack）
 * 3:本地方法栈（Native Method Stack）
 * 4:堆(Heap)
 * 5:程序计数器(Program Counter Register)
 * 2016-12-30
 * @author fengguojie
 */
public class JavaMemory {
	/*
	 *程序计数器：线程私有；是一块较小的内存空间；它的作用可以看做是当前线程所执行的字节码的行号指示器;
	 *虚拟机栈;线程私有，编译器分配内存；用于存储对象的引用 成员变量
	 *本地方法栈：线程私有，编译器分配内存； 
	 *堆区：线程共享 用于存储对象 数组
	 *方法区：线程共享 用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据
	 * */
	

}
